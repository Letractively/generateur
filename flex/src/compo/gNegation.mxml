<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 width="100%" height="100%"
		 creationComplete="creationCompleteHandler(event)" xmlns:compo="compo.*" xmlns:mx="library://ns.adobe.com/flex/mx"
		 >
	<s:layout>
		<s:VerticalLayout paddingBottom="3" paddingLeft="3" paddingRight="3" paddingTop="3"/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.TextOperationEvent;
						
			[Bindable] public var idDico:String;
			[Bindable] public var bRemove:Boolean=true;
			[Bindable] public var bAjout:Boolean=true;
			[Bindable] public var bChange:Boolean=false;
			[Bindable] public var oItem:Object;

			public function faultHandlerService(fault:FaultEvent):void
			{
				var str:String;
				str = "Code: "+fault.fault.faultCode.toString()+"\n"+
					"Detail: "+fault.fault.faultDetail.toString()+"\n"+
					"String: "+fault.fault.faultString.toString()+"\n";
				
				Alert.show(str, "ERREUR : Détail Négation");
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				if(idDico){
					ROC.findByIdDico(idDico);
				}
			}
			
			protected function findByDico_resultHandler(event:ResultEvent):void
			{
				if(event.result){
					var arr:Array = event.result as Array;
					dg.dataProvider = arr;
					var dpCol:ArrayCollection = new ArrayCollection();
					dpCol.addItem({data:'any', label:'Tout'});
					dpCol.addItem({data:'lib', label:'Libellé'});
					dpCol.addItem({data:'num', label:'N°'});
					dgFilter.dpColumns = dpCol;
					dgFilter.dpRows = arr;
					dgFilter.dg = dg;
				}
			}
						
			private function selectDgItem(event:Event):void {
				
				oItem=event.currentTarget.selectedItem;
			}
			
			private function removeItem():void {
				
					Alert.show("Confirmez-vous la suppression de l'item ?",
						"Confirmation Suppression", 3, this, removeItemHandler);				
			}
			
			private function removeItemHandler(event:CloseEvent):void
			{
				if (event.detail == Alert.YES) 
				{
					//ROS.remove(cb.selectedItem[keyName]);
				}
			}
			
			public function ajoutItem():void{
				
			}
			

			protected function enregistrer_clickHandler(event:MouseEvent):void
			{
				if(oItem){
					var change:Array = new Array;
					change['lib']=T0.text;
					ROC.edit(oItem.id_negation, change);					
				}
			}
			
			protected function tester_clickHandler(event:MouseEvent):void
			{
				if(this.parentApplication.verifDico()){					
					var arrT:Array = new Array();
					var arrO:Array = new Array();
					
					arrT.push(G.text);
					arrO.push(GT);
					
					this.parentApplication.testerGen(arrT,arrO);
				}
			}
			
			
			protected function edit_resultHandler(event:ResultEvent):void
			{
				bChange = false;
				ROC.findByIdDico(idDico);
				T0.setStyle("color","black");
				GT.text = "--";
			}			
			
			protected function t_changeHandler(event:TextOperationEvent):void
			{
				var tx:TextInput = event.target as TextInput;
				tx.setStyle("color","red");
				bChange = true;
			}
			
		]]>
	</fx:Script>
		
	<fx:Declarations>
		<s:RemoteObject id="ROC"
						 source="Model_DbTable_Gen_negations" destination="zend" 
						 showBusyCursor="true"
						 fault="faultHandlerService(event)">
			<s:method name="edit" result="edit_resultHandler(event)" />
			<s:method name="findByIdDico" result="findByDico_resultHandler(event)" />
		</s:RemoteObject>
	</fx:Declarations>
	<s:VGroup width="100%" height="100%" id="detail" >
		<compo:hbFilterControl id="dgFilter"  />
		<s:VGroup width="100%" height="100%" >
			<s:HGroup>
				<mx:LinkButton visible="{bRemove}" width="20" click="removeItem()"
							   icon="@Embed('images/DeleteRecord.png')" toolTip="{'Supprimer un item'}"/>
				<mx:LinkButton id="btnAddNew" visible="{bAjout}" width="20" click="ajoutItem()"
							   icon="@Embed('images/AddRecord.png')" toolTip="{'Ajouter un item'}"/>					
			</s:HGroup>
			<s:HGroup width="100%" height="100%" >				
				<mx:DataGrid id="dg" width="100%" height="100%" click="selectDgItem(event);" editable="false" >
					<mx:columns>
						<mx:DataGridColumn dataField="id_negation" editable="false" visible="false" headerText="id_negation" />
						<mx:DataGridColumn dataField="num"  headerText="N°" />
						<mx:DataGridColumn dataField="lib" headerText="Libellé" />
					</mx:columns>
				</mx:DataGrid>
				<s:VGroup>
					<s:HGroup>
						<s:TextInput id="T0" width="100%" text="{oItem.lib}" change="t_changeHandler(event)" />
						<s:TextInput id="G" width="100%" text="{'['+oItem.num+'12000000|v_lire]'}" />
						<s:TextInput id="GT" width="100%" color="#117E20" text="---" />															
					</s:HGroup>
					<s:HGroup>
						<s:Button label="Tester" click="tester_clickHandler(event)" />
						<s:Button label="Enregistrer" click="enregistrer_clickHandler(event)" visible="{bChange}" color="red" />
					</s:HGroup>
				</s:VGroup>
			</s:HGroup>
		</s:VGroup>
	</s:VGroup>
</s:Group>
