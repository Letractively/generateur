<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 width="100%" height="100%"
		 creationComplete="creationCompleteHandler(event)" 
		 xmlns:compo="compo.*" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 >
	<s:layout>
		<s:VerticalLayout paddingBottom="2" paddingLeft="2" paddingRight="2" paddingTop="2"/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.TextOperationEvent;
						
			[Bindable] public var oConcept:Object;
			[Bindable] public var idAdj:String;
			[Bindable] public var idDico:String;
			[Bindable] public var donnee:Object;
			[Bindable] public var testGen:Object;
			[Bindable] public var cptParent:gConcept;
			[Bindable] public var bChange:Boolean=false;
			[Bindable] public var arrChange:Array=new Array;
			private var action:String="";
			private var arrR:Array;

			public function faultHandlerService(fault:FaultEvent):void
			{
				var str:String;
				str = "Code: "+fault.fault.faultCode.toString()+"\n"+
					"Detail: "+fault.fault.faultDetail.toString()+"\n"+
					"String: "+fault.fault.faultString.toString()+"\n";
				
				Alert.show(str, "ERREUR : Détail Adjectif");
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				if(oConcept){
					ROCA.findByIdConcept(oConcept.id_concept);
				}else{
					vs.selectedChild = ecriture;
				}
			}
			
			protected function findByIdConcept_resultHandler(event:ResultEvent):void
			{
				if(event.result[0]){
					donnee = event.result[0];
					if(donnee.elision=="0")elision.selected = false;
					else elision.selected = true;
				}
			}

			protected function tester_clickHandler(event:MouseEvent):void
			{
				if(this.parentApplication.verifDico()){
					var arrT:Array = new Array();
					var arrO:Array = new Array();
					arrT.push(Gm_s.text);
					arrO.push(GTm_s);
					arrT.push(Gf_s.text);
					arrO.push(GTf_s);
					arrT.push(Gm_p.text);
					arrO.push(GTm_p);
					arrT.push(Gf_p.text);
					arrO.push(GTf_p);
					
					this.parentApplication.testerGen(arrT,arrO);
				}
			}

			protected function enregistrer_clickHandler(event:MouseEvent):void
			{
				if(btn.label == "Ajouter"){
					ajouter();
				}else{
					action = "modifier";
					ROCA.utilise(oConcept.id_concept,oConcept.lib);				
				}
			}
			
			private function ajouter():void
			{
				oConcept = new Object;
				oConcept.lib =libA.text; 

				var arrAdj:Array = new Array();
				arrAdj["id_dico"]=idDico;
				arrAdj["prefix"]=prefixA.text;
				if(elisionA.selected)
					arrAdj["elision"]= "1";
				else
					arrAdj["elision"]= "0";
				arrAdj["m_s"] = m_sA.text;			
				arrAdj["f_s"] = f_sA.text;			
				arrAdj["m_p"] = m_pA.text;			
				arrAdj["f_p"] = f_pA.text;							
				var arrCpt:Array = new Array();
				arrCpt["id_dico"]=idDico;
				arrCpt["lib"]=libA.text;
				arrCpt["type"]="a";
				ROCA.ajouter(arrCpt, arrAdj, false);								
			}
						
			protected function utilise_resultHandler(event:ResultEvent):void
			{
				arrR = event.result as Array;
				var actis:String = "";
				if(action == "modifier"){
					actis = "dictionnaire concept : modifier "+arrR[0]['nbGen']+" items pour "+arrR[0]['nbUti']+" utilisateurs : ";
					actis = actis + "a_"+oConcept.lib+" "+donnee.elision+" "+donnee.prefix+" "+donnee.m_s+" "+donnee.f_s+" "+donnee.m_p+" "+donnee.f_p;
					actis = actis + " -> a_"+lib.text+" "+elision.selected+" "+prefix.text+" "+m_s.text+" "+f_s.text+" "+m_p.text+" "+f_p.text;
					actis = actis + " (ref="+idDico+"_"+oConcept.id_concept+")";				
					this.parentApplication.verifActi(arrR[0], action, actis, ROCA, donnee.id_adj, arrChange, idDico);									
				}
				if(action == "supprimer"){
					actis = "dictionnaire concept : supprimer "+arrR[0]['nbGen']+" items pour "+arrR[0]['nbUti']+" utilisateurs : a_"+oConcept.lib+"... (ref="+idDico+"_"+oConcept.id_concept+")";				
					this.parentApplication.verifActi(arrR[0], action, actis, ROCA, oConcept.id_concept, donnee, idDico);									
				}
				
			}
			
			protected function ajouter_resultHandler(event:ResultEvent):void
			{
				Alert.show("L'item est ajouté.","Ajout d'un item");
				oConcept.id_concept = event.result;
				oConcept.type = "a";
				this.cptParent.oItem = oConcept
				this.cptParent.vs.selectedChild = this.cptParent.lecture;
				this.cptParent.ROC.findByIdDico(idDico);
				this.cptParent.initDetail();
			}

			protected function t_changeHandler(event:TextOperationEvent):void
			{
				var tx:TextInput = event.target as TextInput;
				tx.setStyle("color","red");
				arrChange[tx.id] = tx.text;
				bChange = true;
			}
			
			
			protected function edit_resultHandler(event:ResultEvent):void
			{
				bChange = false;
				arrChange = new Array;
				lib.setStyle("color","black");
				prefix.setStyle("color","black");
				m_s.setStyle("color","black");
				m_p.setStyle("color","black");
				f_s.setStyle("color","black");
				f_p.setStyle("color","black");				
				elision.setStyle("color","black");
			}
			
			protected function elision_changeHandler(event:Event):void
			{
				if(elision.selected)
					arrChange["elision"]= "1";
				else
					arrChange["elision"]= "0";
				elision.setStyle("color","red");
				bChange = true;				
			}
			
		]]>
	</fx:Script>
		
	<fx:Declarations>
		<s:RemoteObject id="ROCA"
						 source="Model_DbTable_Gen_adjectifs" destination="zend" 
						 showBusyCursor="true"
						 fault="faultHandlerService(event)">
			<s:method name="edit" result="edit_resultHandler(event)" />  	
			<s:method name="findByIdConcept" result="findByIdConcept_resultHandler(event)" />
			<s:method name="utilise" result="utilise_resultHandler(event)"  />
			<s:method name="ajouter" result="ajouter_resultHandler(event)" />			
		</s:RemoteObject>
	</fx:Declarations>
	<mx:ViewStack id="vs" width="100%" height="100%">
		<mx:Canvas width="100%" height="100%" id="lecture" >					
			<s:VGroup width="100%" height="100%" id="detail" >
				<s:HGroup width="100%" verticalAlign="middle">
					<s:Label text="Nom de l'adjectif :" width="112"/><s:Label id="lib" text="{oConcept.lib}" />			
				</s:HGroup>
				<s:HGroup width="100%" verticalAlign="middle">
					<s:Label text="prefix :" width="112"/><s:TextInput id="prefix" text="{donnee.prefix}" change="t_changeHandler(event)" />			
					<s:CheckBox label="élision :" id="elision" change="elision_changeHandler(event)" /> 			
				</s:HGroup>
				<s:HGroup width="100%" verticalAlign="middle">
					<s:Label text="masculin singulier :" width="112"/><s:TextInput id="m_s" text="{donnee.m_s}" change="t_changeHandler(event)"/>			
					<s:TextInput width="100%" id="Gm_s" text="{'[32|m_mot] [a_'+oConcept.lib+']'}"/><s:Label width="100%" color="#E01919" text="---" id="GTm_s" />
				</s:HGroup>
				<s:HGroup width="100%" horizontalAlign="left" verticalAlign="middle">
					<s:Label text="féminin singulier :" width="112"/><s:TextInput id="f_s" text="{donnee.f_s}" change="t_changeHandler(event)"/>			
					<s:TextInput width="100%" id="Gf_s" text="{'[32|m_phrase] [a_'+oConcept.lib+']'}"/><s:Label  width="100%" color="#E01919" text="---" id="GTf_s" />
				</s:HGroup>
				<s:HGroup width="100%" verticalAlign="middle">
					<s:Label text="masculin pluriel :" width="112"/><s:TextInput id="m_p" text="{donnee.m_p}" change="t_changeHandler(event)"/>			
					<s:TextInput width="100%" id="Gm_p" text="{'[82|m_mot] [a_'+oConcept.lib+']'}"/><s:Label width="100%" color="#E01919" text="---" id="GTm_p" />
				</s:HGroup>
				<s:HGroup width="100%" verticalAlign="middle">
					<s:Label width="112" text="féminin pluriel :"/><s:TextInput id="f_p" text="{donnee.f_p}" change="t_changeHandler(event)" />			
					<s:TextInput width="100%" id="Gf_p" text="{'[82|m_phrase] [a_'+oConcept.lib+']'}" /><s:Label width="100%" color="#E01919" text="---" id="GTf_p" />
				</s:HGroup>
				<s:HGroup verticalAlign="middle">
					<s:Button label="Enregistrer" id="btn" click="enregistrer_clickHandler(event)" visible="{bChange}" color="red" />
					<s:Button label="Tester" id="test" click="tester_clickHandler(event)" />
				</s:HGroup>
			</s:VGroup>
			
		</mx:Canvas>
		<mx:Canvas width="100%" height="100%" id="ecriture" >
			<s:VGroup width="100%" height="100%"  >
				<s:HGroup verticalAlign="middle">
					<s:Label text="Nom de l'adjectif :" width="112"/><s:TextInput id="libA" text="" />			
				</s:HGroup>
				<s:HGroup verticalAlign="middle">
					<s:Label text="prefix :" width="112"/><s:TextInput id="prefixA" text="" />			
					<s:CheckBox label="élision :" id="elisionA" /> 			
				</s:HGroup>
				<s:HGroup verticalAlign="middle">
					<s:Label text="masculin singulier :" width="112"/><s:TextInput id="m_sA" text=""/>			
				</s:HGroup>
				<s:HGroup horizontalAlign="left" verticalAlign="middle">
					<s:Label text="féminin singulier :" width="112"/><s:TextInput id="f_sA" text=""/>			
				</s:HGroup>
				<s:HGroup verticalAlign="middle">
					<s:Label text="masculin pluriel :" width="112"/><s:TextInput id="m_pA" text=""/>			
				</s:HGroup>
				<s:HGroup verticalAlign="middle">
					<s:Label width="112" text="féminin pluriel :"/><s:TextInput id="f_pA" text="" />			
				</s:HGroup>
				<s:HGroup height="100%"  >
					<s:Button label="Ajouter" click="ajouter()"  />
					<s:Button label="Annuler" click="{this.cptParent.vs.selectedChild = this.cptParent.lecture;}"  />
				</s:HGroup>
			</s:VGroup>				
		</mx:Canvas>
	</mx:ViewStack>			
</s:Group>
