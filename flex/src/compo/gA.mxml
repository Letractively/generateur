<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 width="100%" height="100%"
		 creationComplete="creationCompleteHandler(event)" 
		 xmlns:compo="compo.*" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 >
	<s:layout>
		<s:VerticalLayout paddingBottom="2" paddingLeft="2" paddingRight="2" paddingTop="2"/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.TextOperationEvent;
						
			[Bindable] public var bRemove:Boolean=true;
			[Bindable] public var bAjout:Boolean=true;
			[Bindable] public var bModif:Boolean=true;
			[Bindable] public var bCptAjout:Boolean=true;

			[Bindable] public var oConcept:Object;
			[Bindable] public var idAdj:String;
			[Bindable] public var idDico:String;
			[Bindable] public var donnee:Object;
			[Bindable] public var testGen:Object;
			[Bindable] public var cptParent:gConcept;
			[Bindable] public var bChange:Boolean=false;
			[Bindable] public var arrChange:Array=new Array;
			[Bindable] public var bShowConceptsLies:Boolean=true;
			[Bindable] public var listSelect:List;
			[Bindable] public var txtGen:String;
			
			private var action:String="";
			private var arrR:Array;

			public function faultHandlerService(fault:FaultEvent):void
			{
				var str:String;
				str = "Code: "+fault.fault.faultCode.toString()+"\n"+
					"Detail: "+fault.fault.faultDetail.toString()+"\n"+
					"String: "+fault.fault.faultString.toString()+"\n";
				
				Alert.show(str, "ERREUR : Détail Adjectif");
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				bAjout = this.parentApplication.uti.écriture;
				bModif = this.parentApplication.uti.écriture;
				bRemove = this.parentApplication.uti.suppression;
				
				//vérifie s'il faut ajouter les concepts liés
				if(!bShowConceptsLies) vs.selectedChild = assos;

				if(oConcept){
					ROCA.findByIdConcept(oConcept.id_concept);
					bCptAjout = false;
				}else{
					vs.selectedChild = ecriture;
				}
				
			}
			
			protected function findByIdConcept_resultHandler(event:ResultEvent):void
			{
				//précise la liste sélectionnée
				if(!bShowConceptsLies){
					listSelect = this.listAssos;
					if(oConcept.type=="carac" || oConcept.type=="caract") 
						txtGen = oConcept.type+oConcept.lib;
					else
						txtGen = oConcept.type+'-'+oConcept.lib;					
				}
				else listSelect = this.list;
				
				listSelect.dataProvider = null;
				if(event.result){
					var ac:ArrayCollection = new ArrayCollection(event.result as Array);
					//ac.addEventListener(CollectionEvent.COLLECTION_CHANGE,changeList);
					listSelect.dataProvider = ac;
				}				
			}

			protected function changeList(e:CollectionEvent):void
			{
				if(e.kind=="remove"){					
					idAdj = e.items[0].id_adj;
					Alert.show("Confirmez-vous la suppression de l'item ?",
						"Confirmation Suppression", 3, this, removeItemHandler);									
				}
			}
			
			private function removeItemHandler(event:CloseEvent):void
			{
				if (event.detail == Alert.YES) 
				{
					ROCA.remove(idAdj);
				}else{
					ROCA.findByIdConcept(oConcept.id_concept);									
				}
			}
			
			protected function tester_clickHandler(event:MouseEvent):void
			{
				if(this.parentApplication.verifDico()){
					var arrT:Array = new Array();
					var arrO:Array = new Array();
					arrT.push(Gm_s.text);
					arrO.push(GTm_s);
					arrT.push(Gf_s.text);
					arrO.push(GTf_s);
					arrT.push(Gm_p.text);
					arrO.push(GTm_p);
					arrT.push(Gf_p.text);
					arrO.push(GTf_p);
					
					this.parentApplication.testerGen(arrT,arrO);
				}
			}

			protected function testAssos_clickHandler(event:MouseEvent):void
			{
				if(this.parentApplication.verifDico()){
					var arrT:Array = new Array();
					var arrO:Array = new Array();
					arrT.push(Gm_sA.text);
					arrO.push(GTm_sA);
					arrT.push(Gf_sA.text);
					arrO.push(GTf_sA);
					arrT.push(Gm_pA.text);
					arrO.push(GTm_pA);
					arrT.push(Gf_pA.text);
					arrO.push(GTf_pA);
					
					this.parentApplication.testerGen(arrT,arrO);
				}				
			}
			
			protected function enregistrer_clickHandler(event:MouseEvent):void
			{
				//récupère les modifications
				arrChange=new Array;
				for each(var obj:Object in listSelect.dataProvider){
					if(obj.change["fp"] || obj.change["m_p"] || obj.change["f_s"] || obj.change["m_s"] || obj.change["prefix"] || obj.change["genre"] || obj.change["elision"]){
						var arr:Array = new Array;
						arr["id_adj"]=obj.id_adj;
						arr["val"]=obj.change;
						arrChange.push(arr);
					}
				}
				action = "modifier";
				ROCA.utilise(oConcept.id_concept,oConcept.lib);				
			}
			
			private function ajouter():void
			{
				var arrCpt:Array = new Array();
				//vérifie s'il faut créer le concept
				if(oConcept == null){
					oConcept = new Object;
					oConcept.lib =libA.text; 
					arrCpt["id_dico"]=idDico;
					arrCpt["lib"]=libA.text;
					arrCpt["type"]="a";					
				}else{
					arrCpt["id_concept"]=oConcept.id_concept;					
				}
				var arrAdj:Array = new Array();
				arrAdj["id_dico"]=idDico;
				arrAdj["prefix"]=prefixA.text;
				if(elisionA.selected)
					arrAdj["elision"]= "1";
				else
					arrAdj["elision"]= "0";
				arrAdj["m_s"] = m_sA.text;			
				arrAdj["f_s"] = f_sA.text;			
				arrAdj["m_p"] = m_pA.text;			
				arrAdj["f_p"] = f_pA.text;							

				ROCA.ajouter(arrCpt, arrAdj, false);								
			}
						
			protected function utilise_resultHandler(event:ResultEvent):void
			{
				arrR = event.result as Array;
				var actis:String = "";
				if(action == "modifier"){
					actis = "dictionnaire concept : modifier "+arrR[0]['nbGen']+" items pour "+arrR[0]['nbUti']+" utilisateurs : ";
					actis = actis + "a_"+oConcept.lib;
					actis = actis + " (ref="+idDico+"_"+oConcept.id_concept+")";				
					this.parentApplication.verifActi(arrR[0], action, actis, ROCA, oConcept.id_concept, arrChange, idDico);									
				}
				if(action == "supprimer"){
					actis = "dictionnaire concept : supprimer "+arrR[0]['nbGen']+" items pour "+arrR[0]['nbUti']+" utilisateurs : a_"+oConcept.lib+"... (ref="+idDico+"_"+oConcept.id_concept+")";				
					this.parentApplication.verifActi(arrR[0], action, actis, ROCA, oConcept.id_concept, donnee, idDico);									
				}
				
			}
			
			protected function ajouter_resultHandler(event:ResultEvent):void
			{
				Alert.show("L'item est ajouté.","Ajout d'un item");
				if(!oConcept.id_concept){
					oConcept.id_concept = event.result;
					oConcept.type = "a";
					this.cptParent.oItem = oConcept
					this.cptParent.vs.selectedChild = this.cptParent.lecture;
					this.cptParent.ROC.findByIdDico(idDico);
					this.cptParent.initDetail();
				}
				bChange = false;
				ROCA.findByIdConcept(oConcept.id_concept);
				vs.selectedChild = lecture;
				
			}
			
			
			protected function edit_resultHandler(event:ResultEvent):void
			{
				bChange = false;
				ROCA.findByIdConcept(oConcept.id_concept);
			}
			
			protected function list_valueCommitHandler(event:FlexEvent):void
			{
				bChange = true;				
			}
			
			protected function remove_clickHandler(event:MouseEvent):void
			{
				if(listSelect.selectedItem){					
					idAdj = listSelect.selectedItem.id_adj;
					Alert.show("Confirmez-vous la suppression de l'item ?",
						"Confirmation Suppression", 3, this, removeItemHandler);									
				}
			}
			
			protected function listAssos_clickHandler(event:MouseEvent):void
			{
				donnee = listAssos.selectedItem;
				
			}
			
			protected function list_clickHandler(event:MouseEvent):void
			{
				donnee = list.selectedItem;
			}
			
		]]>
	</fx:Script>
		
	<fx:Declarations>
		<s:RemoteObject id="ROCA"
						 source="Model_DbTable_Gen_adjectifs" destination="zend" 
						 showBusyCursor="true"
						 fault="faultHandlerService(event)">
			<s:method name="editMulti" result="edit_resultHandler(event)" />  	
			<s:method name="findByIdConcept" result="findByIdConcept_resultHandler(event)" />
			<s:method name="utilise" result="utilise_resultHandler(event)"  />
			<s:method name="ajouter" result="ajouter_resultHandler(event)" />			
			<s:method name="remove" result="edit_resultHandler(event)" />  	
		</s:RemoteObject>
	</fx:Declarations>
	<mx:ViewStack id="vs" width="100%" height="100%">
		<mx:Canvas width="100%" height="100%" id="lecture" >					
			<s:VGroup width="100%" height="100%" id="detail" >
				<s:HGroup width="100%" verticalAlign="middle">
					<s:Label text="Nom de l'adjectif :" /><s:Label id="lib" text="{oConcept.lib}" />			
					<s:Button label="Tester" id="test" click="tester_clickHandler(event)" />
				</s:HGroup>
				<s:HGroup width="100%" verticalAlign="middle">
					<s:Image source="@Embed('images/masulin.jpg')" /><s:Spacer width="20"/>			
					<s:TextInput width="100%" id="Gm_s" text="{'[32|m_mot] [a_'+oConcept.lib+']'}"/><s:Label width="100%" color="#E01919" text="---" id="GTm_s" />
					<s:Image source="@Embed('images/feminin.jpg')" /><s:Spacer width="20"/>			
					<s:TextInput width="100%" id="Gf_s" text="{'[32|m_phrase] [a_'+oConcept.lib+']'}"/><s:Label  width="100%" color="#E01919" text="---" id="GTf_s" />
				</s:HGroup>
				<s:HGroup width="100%" verticalAlign="middle">
					<s:Image source="@Embed('images/masulin.jpg')" /><s:Image source="@Embed('images/masulin.jpg')" />
					<s:TextInput width="100%" id="Gm_p" text="{'[82|m_mot] [a_'+oConcept.lib+']'}"/><s:Label width="100%" color="#E01919" text="---" id="GTm_p" />
					<s:Image source="@Embed('images/feminin.jpg')" /><s:Image source="@Embed('images/feminin.jpg')" />			
					<s:TextInput width="100%" id="Gf_p" text="{'[82|m_phrase] [a_'+oConcept.lib+']'}" /><s:Label width="100%" color="#E01919" text="---" id="GTf_p" />
				</s:HGroup>
				<mx:TabNavigator width="100%" height="100%" id="tn" >
					<s:NavigatorContent width="100%" height="100%" label="adjectifs associés">
						<s:VGroup width="100%" height="100%" paddingBottom="4" paddingLeft="4" paddingRight="4" paddingTop="4" >
							<s:HGroup verticalAlign="middle">
								<mx:LinkButton id="btnUpdate" width="20" click="enregistrer_clickHandler(event)" visible="{bChange}"
											   icon="@Embed('images/UpdateRecord.png')" toolTip="Enregistrer les modifications"/>					
								<mx:LinkButton id="btnAddNew" visible="{bAjout}" width="20" click="{vs.selectedChild=ecriture}" 
											   icon="@Embed('images/AddRecord.png')" toolTip="Ajouter un item"/>					
								<mx:LinkButton width="20" click="remove_clickHandler(event)" visible="{bRemove}" icon="@Embed('images/DeleteRecord.png')" toolTip="Supprimer un item"/>
							</s:HGroup>
							<s:List id="list" width="100%" height="100%" itemRenderer="compo.irAdj" valueCommit="list_valueCommitHandler(event)" borderVisible="false" click="list_clickHandler(event)"   />							
						</s:VGroup>
					</s:NavigatorContent>
					<s:NavigatorContent width="100%" height="100%" label="générateurs associés">
						<compo:gG oConcept="{this.oConcept}" idDico="{this.idDico}" />						
					</s:NavigatorContent>
				</mx:TabNavigator>
			</s:VGroup>
		</mx:Canvas>
		<mx:Canvas width="100%" height="100%" id="ecriture" >
			<s:VGroup width="100%" height="100%"  >
				<s:HGroup verticalAlign="middle" visible="{bCptAjout}" >
					<s:Label text="Nom de l'adjectif :" width="112"/><s:TextInput id="libA" text="" />			
				</s:HGroup>
				<s:HGroup verticalAlign="middle">
					<s:Label text="prefix :" width="112"/><s:TextInput id="prefixA" text="" />			
					<s:CheckBox label="élision :" id="elisionA" /> 			
				</s:HGroup>
				<s:HGroup verticalAlign="middle">
					<s:Label text="masculin singulier :" width="112"/><s:TextInput id="m_sA" text=""/>			
				</s:HGroup>
				<s:HGroup horizontalAlign="left" verticalAlign="middle">
					<s:Label text="féminin singulier :" width="112"/><s:TextInput id="f_sA" text=""/>			
				</s:HGroup>
				<s:HGroup verticalAlign="middle">
					<s:Label text="masculin pluriel :" width="112"/><s:TextInput id="m_pA" text=""/>			
				</s:HGroup>
				<s:HGroup verticalAlign="middle">
					<s:Label width="112" text="féminin pluriel :"/><s:TextInput id="f_pA" text="" />			
				</s:HGroup>
				<s:HGroup height="100%"  >
					<s:Button label="Ajouter" click="ajouter()"  />
					<s:Button label="Annuler" click="{this.cptParent.vs.selectedChild = this.cptParent.lecture;}"  />
				</s:HGroup>
			</s:VGroup>				
		</mx:Canvas>
		<mx:Canvas width="100%" height="100%" id="assos" >
			<s:VGroup width="100%" height="100%" paddingBottom="4" paddingLeft="4" paddingRight="4" paddingTop="4" >
				<s:HGroup width="100%" verticalAlign="middle">
					<s:Image source="@Embed('images/masulin.jpg')" /><s:Spacer width="20"/>			
					<s:TextInput width="100%" id="Gm_sA" text="{'[32|m_mot] ['+txtGen+']'}"/><s:Label width="100%" color="#E01919" text="---" id="GTm_sA" />
					<s:Image source="@Embed('images/feminin.jpg')" /><s:Spacer width="20"/>			
					<s:TextInput width="100%" id="Gf_sA" text="{'[32|m_phrase] ['+txtGen+']'}"/><s:Label  width="100%" color="#E01919" text="---" id="GTf_sA" />
				</s:HGroup>
				<s:HGroup width="100%" verticalAlign="middle">
					<s:Image source="@Embed('images/masulin.jpg')" /><s:Image source="@Embed('images/masulin.jpg')" />
					<s:TextInput width="100%" id="Gm_pA" text="{'[82|m_mot] ['+txtGen+']'}"/><s:Label width="100%" color="#E01919" text="---" id="GTm_pA" />
					<s:Image source="@Embed('images/feminin.jpg')" /><s:Image source="@Embed('images/feminin.jpg')" />			
					<s:TextInput width="100%" id="Gf_pA" text="{'[82|m_phrase] ['+txtGen+']'}" /><s:Label width="100%" color="#E01919" text="---" id="GTf_pA" />
				</s:HGroup>
				<s:HGroup verticalAlign="middle">
					<mx:LinkButton width="20" click="enregistrer_clickHandler(event)" visible="{bChange}"
								   icon="@Embed('images/UpdateRecord.png')" toolTip="Enregistrer les modifications"/>					
					<mx:LinkButton visible="{bAjout}" width="20" click="{vs.selectedChild=ecriture}" 
								   icon="@Embed('images/AddRecord.png')" toolTip="Ajouter un item"/>					
					<mx:LinkButton width="20" click="remove_clickHandler(event)" visible="{bRemove}" icon="@Embed('images/DeleteRecord.png')" toolTip="Supprimer un item"/>
					<s:Button label="Tester les adjectifs" click="testAssos_clickHandler(event)" />
				</s:HGroup>
				<s:List id="listAssos" width="100%" height="100%" borderVisible="false" itemRenderer="compo.irAdj" valueCommit="list_valueCommitHandler(event)" click="listAssos_clickHandler(event)"    />
			</s:VGroup>
		</mx:Canvas>		
	</mx:ViewStack>			
</s:Group>
