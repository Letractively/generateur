<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
	close="PopUpManager.removePopUp(this);" title="Vérification des modifications" creationComplete="creationCompleteHandler(event)"
	xmlns:ns2="compo.*"	>
	<mx:Script>
        <![CDATA[
			import com.adobe.serialization.json.JSON;
			
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.CursorManager;
			import mx.managers.PopUpManager;
			import mx.rpc.AsyncToken;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;


			[Bindable] public var callback:Function;
			public var idItem:String;
			public var dataItem:Array;
			public var arrItem:Array;
			public var rocItem:Object;
			public var actionItem:String;
			public var actisItem:String;
			public var idDicoItem:String;
			

			public function faultHandlerService(fault:FaultEvent):void
			{
				var str:String;
				str = "Code: "+fault.fault.faultCode.toString()+"\n"+
					"Detail: "+fault.fault.faultDetail.toString()+"\n"+
					"String: "+fault.fault.faultString.toString()+"\n";
				
				Alert.show(str, "ERREUR :"+this.title);
			}
			 
			
			public function verifActi():void
			{
				if(arrItem['nbGen']!=0){
					if(arrItem['nbUti']==1){
						if(actionItem=="supprimer"){
							taMessage.text = "Vous ne pouvez pas supprimer l'item."
								+"\nIl est utilisé dans "+arrItem['nbGen']+" expression(s)."
								+ "\nVous devez supprimer ces expresions avant de pouvoir supprimer l'item.";
							btnModifier.visible =  false;
							btnAjouter.visible =  false;
							btnPrevenir.visible =  false;
						}else{
							taMessage.text = "L'item est utilisé dans "+arrItem['nbGen']+" expression(s)."
								+ "\nVoulez-vous que ces expressions soient impactées : cliquer sur 'Modifier'"
								+ "\nPréférez vous créer un nouvel item : cliquer sur 'Ajouter'";										
							btnPrevenir.visible =  false;
						}	
					}else{
						var mess:String ="";
						if(actionItem=="modifier"){
							mess="\nPréférez vous créer un nouvel item : cliquer sur 'Ajouter'";
						}else{
							btnAjouter.visible =  false;							
						}
						taMessage.text = "Vous ne pouvez pas "+actionItem+" l'item."
							+"\nIl est utilisé dans "+arrItem['nbGen']+" expression(s)."
							+"\nVoulez vous prévenir le(s) "+arrItem['nbUti']+" utilisateur(s)  : cliquer sur 'Prevenir'"
							+ mess;									
						btnModifier.visible =  false;
					}
				}else{
					if(actionItem=="supprimer")
						if(rocItem.source=="Model_DbTable_Gen_determinants")
							rocItem.removeNum(idItem, idDicoItem);					
						else
							rocItem.remove(idItem);
					if(actionItem=="modifier"){
						if(rocItem.source=="Model_DbTable_Gen_determinants")
							rocItem.editMulti(dataItem);					
						else
							rocItem.edit(idItem, dataItem);					
					}
					//réinitialise le tableau général des concepts
					this.parentApplication.allConcept=null;
					PopUpManager.removePopUp(this);
				}	
			}
						
			public function ajoutActiUti():void
			{
				ROACTI.ajoutForUtis(actisItem, arrItem['idsUti'], this.parentApplication.dgOeuParam.idOeu, idDicoItem, idItem, dataItem);
			}
			
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				verifActi();				
			}
			
			protected function btnModifier_clickHandler(event:MouseEvent):void
			{
				modifier();				
			}
			
			protected function btnAjouter_clickHandler(event:MouseEvent):void
			{
				if(actionItem=="modifier"){
					if(rocItem.source=="Model_DbTable_Gen_determinants")
						rocItem.dupliquer(dataItem);					
					else if(rocItem.source=="Model_DbTable_Gen_generateurs"){
						var arrChange:Array = new Array;
						arrChange["valeur"] = dataItem["valeur"];				
						arrChange["id_dico"] = dataItem["id_dico"];				
						rocItem.ajouter(dataItem["id_concept"], arrChange);											
					}else
						rocItem.ajouter(dataItem);											
				}
				//réinitialise le tableau général des concepts
				this.parentApplication.allConcept=null;
				PopUpManager.removePopUp(this);				
				
			}

			protected function modifier():void
			{
				if(rocItem.source=="Model_DbTable_Gen_determinants" 
					|| rocItem.source=="Model_DbTable_Gen_substantifs"
					|| rocItem.source=="Model_DbTable_Gen_adjectifs"
					|| rocItem.source=="Model_DbTable_Gen_verbes"
					|| rocItem.source=="Model_DbTable_Gen_syntagmes"
				)
					rocItem.editMulti(dataItem);					
				else
					rocItem.edit(idItem, dataItem);					
				
				//réinitialise le tableau général des concepts
				this.parentApplication.allConcept=null;
				PopUpManager.removePopUp(this);				
			}
			
			protected function btnForcer_clickHandler(event:MouseEvent):void
			{
				if(actionItem=="supprimer")
					if(rocItem.source=="Model_DbTable_Gen_determinants")
						rocItem.removeNum(idItem, idDicoItem);					
					else
						rocItem.remove(idItem);
				if(actionItem=="modifier"){
					modifier();
				}
				//réinitialise le tableau général des concepts
				this.parentApplication.allConcept=null;
				PopUpManager.removePopUp(this);				
			}
			
			protected function btnPrevenir_clickHandler(event:MouseEvent):void
			{
				ajoutActiUti();				
			}
			
			protected function ajoutForUtis_resultHandler(event:ResultEvent):void
			{
				PopUpManager.removePopUp(this);				
			}
			
			protected function btnAnnuler_clickHandler(event:MouseEvent):void
			{
				PopUpManager.removePopUp(this);				
			}
			
		]]>
    </mx:Script>
	<mx:RemoteObject id="ROACTI"
					source="Model_DbTable_Flux_Acti" destination="zend" 
					showBusyCursor="true"
					fault="faultHandlerService(event)">
		<mx:method name="ajoutForUtis" result="ajoutForUtis_resultHandler(event)"  />
	</mx:RemoteObject>		

	<mx:VBox >
		<mx:TextArea id="taMessage" width="100%" height="300"  />
		<mx:HBox >
			<mx:Button id="btnPrevenir" label="Prévenir" click="btnPrevenir_clickHandler(event)" />
			<mx:Button id="btnModifier" label="Modifier" click="btnModifier_clickHandler(event)" />
			<mx:Button id="btnAjouter" label="Ajouter" click="btnAjouter_clickHandler(event)"  />
			<mx:Button id="btnForcer" label="Forcer" visible="{this.parentApplication.uti.administration}" click="btnForcer_clickHandler(event)" />
			<mx:Button id="btnAnnuler" label="Annuler" click="btnAnnuler_clickHandler(event)"  />
		</mx:HBox>
	</mx:VBox>		

</mx:TitleWindow>
