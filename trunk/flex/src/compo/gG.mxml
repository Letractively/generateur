<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 width="100%" height="100%"
		 creationComplete="creationCompleteHandler(event)" xmlns:compo="compo.*" xmlns:mx="library://ns.adobe.com/flex/mx" 
		 >
	<s:layout>
		<s:VerticalLayout paddingBottom="2" paddingLeft="2" paddingRight="2" paddingTop="2"/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
						
			[Bindable] public var oConcept:Object;
			[Bindable] public var idGen:String;
			[Bindable] public var valGen:String;
			[Bindable] public var donnee:Object;
			[Bindable] public var testGen:Object;
			[Bindable] public var bRemove:Boolean=true;
			[Bindable] public var bAjout:Boolean=true;

			public function faultHandlerService(fault:FaultEvent):void
			{
				var str:String;
				str = "Code: "+fault.fault.faultCode.toString()+"\n"+
					"Detail: "+fault.fault.faultDetail.toString()+"\n"+
					"String: "+fault.fault.faultString.toString()+"\n";
				
				Alert.show(str, "ERREUR : Détail Teste Génératif");
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				if(oConcept && this.parentApplication.verifDico()){
					ROCG.findByIdConcept(oConcept.id_concept);
				}
			}
			
			protected function findByIdConcept_resultHandler(event:ResultEvent):void
			{
				var arr:Array = event.result as Array;
				dg.dataProvider = arr;
			}

			protected function tester_clickHandler(event:MouseEvent):void
			{
				if(this.parentApplication.verifDico()){
					var arrT:Array = new Array();
					var arrO:Array = new Array();
					arrT.push(G.text);
					arrO.push(GT);
					this.parentApplication.testerGen(arrT,arrO);
				}
			}

			private function selectDgItem(event:Event):void {
				
				var item:Object=event.currentTarget.selectedItem;
				if(item){
					//récupère les éléments génératifs du texte
					var arrGdeb:Array = String(item.valeur).split("[");
					for each(var g:String in arrGdeb){
						var arrGFin:Array = g.split("]");
					}
					
				}

			}			
			protected function enregistrer_clickHandler(event:MouseEvent):void
			{
				var arr:Array = new Array();
				//ROCG.edit(donnee.id_gen, arr)				
			}
			private function removeItem():void {
				
				Alert.show("Confirmez-vous la suppression de l'item ?",
					"Confirmation Suppression", 3, this, removeItemHandler);				
			}
			
			private function removeItemHandler(event:CloseEvent):void
			{
				if (event.detail == Alert.YES) 
				{
					//ROS.remove(cb.selectedItem[keyName]);
				}
			}
			
			public function ajoutItem():void{
				
			}

			
		]]>
	</fx:Script>
		
	<fx:Declarations>
		<s:RemoteObject id="ROCG"
						 source="Model_DbTable_Gen_generateurs" destination="zend" 
						 showBusyCursor="true"
						 fault="faultHandlerService(event)">
			<s:method name="edit" />  	
			<s:method name="findByIdConcept" result="findByIdConcept_resultHandler(event)" />  	
		</s:RemoteObject>
	</fx:Declarations>
	<s:VGroup width="100%" height="100%" id="detail" >
		<s:HGroup width="100%" verticalAlign="middle">
			<s:Label text="Nom du texte génératif :" /><s:Label text="{oConcept.lib}" />			
		</s:HGroup>
		<s:VGroup width="100%" height="100%" >
			<s:HGroup>
				<s:Button visible="{bRemove}" width="20" click="removeItem()" 
							   icon="@Embed('images/DeleteRecord.png')" toolTip="Supprimer un item"/>
				<s:Button id="btnAddNew" visible="{bAjout}" width="20" click="ajoutItem()"
							   icon="@Embed('images/AddRecord.png')" toolTip="Ajouter un item"/>					
			</s:HGroup>
			<mx:DataGrid id="dg" width="100%" height="100%" click="selectDgItem(event);" editable="true" >
				<mx:columns>
					<mx:DataGridColumn dataField="id_gen" editable="false" visible="false" headerText="id_gen" />
					<mx:DataGridColumn dataField="valeur" headerText="Descripteur" editable="true" />
				</mx:columns>
			</mx:DataGrid>
		</s:VGroup>
		<s:HGroup width="100%" verticalAlign="middle">
			<s:TextInput width="100%" id="G" text="{'['+oConcept.type+'-'+oConcept.lib+']'}"/>
			<s:Label width="100%" color="#E01919" text="---" id="GT" />
		</s:HGroup>
		<s:HGroup verticalAlign="middle">
			<s:Button label="Enregistrer" click="enregistrer_clickHandler(event)" />
			<s:Button label="Tester" click="tester_clickHandler(event)" />
		</s:HGroup>
	</s:VGroup>
</s:Group>
