<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  xmlns:flexiframe="http://code.google.com/p/flex-iframe/"
		  width="100%" height="100%"
		  paddingBottom="4" paddingLeft="4" paddingRight="4" paddingTop="4"
		  creationComplete="creationCompleteHandler(event)"
		  >
	<fx:Script>
		<![CDATA[
			import flash.external.*;
			import mx.events.FlexEvent;
			
			import mx.controls.Alert;
						
			[Bindable] public var idOeu:int;
			[Bindable] public var oItem:Object;
			[Bindable] public var idGen:int;
			private var textLoader:URLLoader;
			
			private function getUrlParam():String{
				var lien:String = this.parentApplication.urlAPI+"?oeu="+idOeu+"&cpt="+oItem.id_concept;					
				if(idGen)lien += "&gen="+idGen;
				if(minCoupure.value!=0){
					if(minCoupure.value > maxCoupure.value){
						Alert.show("L'intervale du nombre de caractère n'est pas bon.");
					}else{
						lien += "&minC="+minCoupure.value + "&maxC="+maxCoupure.value;
					}
				}

				return lien;
			}
			
			protected function html1_clickHandler(event:MouseEvent):void
			{
				if(oItem){
					txtLien.text = getUrlParam()+"&nb="+nsTB.value;					
					loadUrl(txtLien.text)
				}
			}
			
			protected function html2_clickHandler(event:MouseEvent):void
			{
				if(oItem){
					txtLien.text = getUrlParam()+"&frt=html";
					if(cbBtnGen2.selected)txtLien.text += "&btn=1"; 
					loadUrl(txtLien.text)
				}
			}
			
			protected function html3_clickHandler(event:MouseEvent):void
			{
				if(oItem){
					txtLien.text = getUrlParam()+"&frt=iframe";					
					if(cbBtnGen3.selected)txtLien.text += "&btn=1"; 
					loadUrl(txtLien.text)
				}
			}
			
			protected function loadUrl(url:String):void
			{
				textLoader = new URLLoader();
				var textReq:URLRequest = new URLRequest(url);
				
				textLoader.load(textReq);
				textLoader.addEventListener(Event.COMPLETE, textLoadComplete);							
			}
			
			protected function textLoadComplete(event:Event):void
			{
				fi.source = txtLien.text;
				taCS.text = textLoader.data;
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				init();
			}
			public function init():void
			{
				if(oItem){
					if(oItem.type){
						switch(oItem.type) 
						{ 
							case "a":
								txtGen.text = " [" + oItem.type+ "_" + oItem.lib+ "]";
								break; 
							case "m": 
								txtGen.text = " [" + oItem.type+ "_" + oItem.lib+ "]";
								break; 
							case "s":
								txtGen.text = " [" + oItem.type+ "_" + oItem.lib+ "]";
								break;
							case "v": 
								txtGen.text = " [" + oItem.type+ "_" + oItem.lib+ "]";
								break; 
							case "carac": 
								txtGen.text = "[" + oItem.type+oItem.lib+ "]";
								break; 
							case "caract": 
								txtGen.text = "[" + oItem.type+oItem.lib+ "]";
								break; 
							default: 
								txtGen.text = "[" + oItem.type+ "-" + oItem.lib+ "]";
								break; 
						}
					}else
						txtGen.text = oItem.valeur;
				}
				fi.source = "vide.html";
				taCS.text = "";				
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
		<s:HGroup width="100%" verticalAlign="middle" fontSize="18" >
			<s:Label text="Texte génératif :" />
			<s:TextInput id="txtGen" text="" width="100%" />			
		</s:HGroup>
		<s:HGroup width="100%" verticalAlign="middle" fontSize="18" >
			<s:Label text="Lien vers le test :" />
			<s:TextInput id="txtLien" text="" width="100%" />
		</s:HGroup>
		<s:HGroup width="100%" verticalAlign="middle" fontSize="18" >
			<s:Label text="Coupure de phrase entre (0 = pas de coupure) " />
			<s:NumericStepper id="minCoupure" maximum="200" value="0" />							
			<s:Label text=" caractères et " />
			<s:NumericStepper id="maxCoupure" maximum="200" value="0" />							
			<s:Label text=" caractères" />
		</s:HGroup>
		<s:HGroup width="100%" height="100%" >
			<s:Panel title="Codes Disponibles">
				<s:VGroup paddingBottom="4" paddingLeft="4" paddingRight="4" paddingTop="4">
					<s:Label text="Lien pour du texte brut" />
					<s:HGroup verticalAlign="middle">
						<s:Label text="Nb. de génération :" />
						<s:NumericStepper id="nsTB" maximum="200" value="1" />							
					</s:HGroup>
					<s:Button label="Tester" click="html1_clickHandler(event)" />					
					<mx:HRule width="100%" height="3" />
					<s:Label text="Code d'une page HTML" />
					<s:CheckBox label="Avec bouton de génération" id="cbBtnGen2" />
					<s:Button label="Tester" click="html2_clickHandler(event)" />					
					<mx:HRule width="100%" height="3" />
					<s:Label text="Code pour intégrer dans un page Web" />
					<s:CheckBox label="Avec bouton de génération" id="cbBtnGen3" />
					<s:Button label="Tester" click="html3_clickHandler(event)" />					
					<mx:HRule width="100%" height="3" />
				</s:VGroup>
			</s:Panel>		
			<s:Panel width="100%" height="100%" title="Résultat du test">
				<s:HGroup width="100%" height="100%" fontSize="18" paddingBottom="4" paddingLeft="4" paddingRight="4" paddingTop="4">						
					<s:VGroup height="100%" width="100%">
						<s:Label text="texte brut : " />
						<s:TextArea id="taCS" width="100%" height="100%" />
					</s:VGroup>
					<s:VGroup height="100%" width="100%">
						<s:Label text="visualisation navigateur : " />
						<s:BorderContainer height="100%" width="100%">
							<s:layout>
								<s:VerticalLayout paddingLeft="4" paddingRight="4" paddingTop="4" paddingBottom="4"/>
							</s:layout>
							<flexiframe:IFrame id="fi" height="100%" width="100%" /> 					
						</s:BorderContainer>
					</s:VGroup>
				</s:HGroup>						
			</s:Panel>
		</s:HGroup>
</s:VGroup>
