<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 width="100%" height="100%"
		 creationComplete="creationCompleteHandler(event)" xmlns:compo="compo.*" xmlns:mx="library://ns.adobe.com/flex/mx"
		 >
	<s:layout>
		<s:VerticalLayout paddingBottom="3" paddingLeft="3" paddingRight="3" paddingTop="3"/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.TextOperationEvent;
						
			[Bindable] public var idDico:String;
			[Bindable] public var bRemove:Boolean=true;
			[Bindable] public var bAjout:Boolean=true;
			[Bindable] public var bChange:Boolean=false;
			[Bindable] public var arrChange:Array;
			[Bindable] public var oItem:Object;
			private var action:String="";
			private var arrR:Array;

			public function faultHandlerService(fault:FaultEvent):void
			{
				var str:String;
				str = "Code: "+fault.fault.faultCode.toString()+"\n"+
					"Detail: "+fault.fault.faultDetail.toString()+"\n"+
					"String: "+fault.fault.faultString.toString()+"\n";
				
				Alert.show(str, "ERREUR : Détail Déterminant");
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				if(idDico){
					ROC.findByIdDico(idDico);
				}
			}
			
			protected function findByDico_resultHandler(event:ResultEvent):void
			{
				if(event.result){
					var arr:Array = event.result as Array;
					dg.dataProvider = arr;
					var dpCol:ArrayCollection = new ArrayCollection();
					dpCol.addItem({data:'any', label:'Tout'});
					dpCol.addItem({data:'num', label:'N°'});
					dpCol.addItem({data:'ms', label:'Mascu. sing.'});
					dpCol.addItem({data:'fs', label:'Fémi. sing.'});
					dpCol.addItem({data:'mse', label:'Mascu. sing. éli.'});
					dpCol.addItem({data:'fse', label:'Fémi. sing. éli.'});
					dpCol.addItem({data:'mp', label:'Mascu. plu.'});
					dpCol.addItem({data:'fp', label:'Fémi. plu.'});
					dpCol.addItem({data:'mpe', label:'Mascu. plu. éli.'});
					dpCol.addItem({data:'fpe', label:'Fémi. plu. éli.'});
					dgFilter.dpColumns = dpCol;
					dgFilter.dpRows = arr;
					dgFilter.dg = dg;
				}
			}
						
			private function selectDgItem(event:Event):void {
				
				oItem = event.currentTarget.selectedItem;
				arrChange = new Array;
				if(oItem){
					GTms.text = "--";
					GTfs.text = "--";
					GTmse.text = "--";
					GTfse.text = "--";
					GTmp.text = "--";
					GTfp.text = "--";
					GTmpe.text = "--";
					GTfpe.text = "--";						
				}
			}
			
			private function removeItem():void {
				
					Alert.show("Confirmez-vous la suppression de l'item ?",
						"Confirmation Suppression", 3, this, removeItemHandler);				
			}
			
			private function removeItemHandler(event:CloseEvent):void
			{
				if (event.detail == Alert.YES) 
				{
					action = "supprimer";
					ROC.utilise(idDico, oItem.num);
				}
			}
						
			protected function enregistrer_clickHandler(event:MouseEvent):void
			{
				if(arrChange.length>0){
					action = "modifier";
					ROC.utilise(idDico, oItem.num);
				}
			}

			protected function utilise_resultHandler(event:ResultEvent):void
			{
				arrR = event.result as Array;
				var actis:String = "";
				if(action == "modifier"){
					actis = "dictionnaire déterminant : modifier "+arrR[0]['nbGen']+" items pour "+arrR[0]['nbUti']+" utilisateurs : ";
					for each(var chg:Object in arrChange){
						actis = actis +oItem.num+" "+oItem.ordre+" -> "+chg['lib']+" (ref="+idDico+"_"+chg['id_dtm']+")";				
					}	
				}
				if(action == "supprimer")
					actis = "dictionnaire déterminant : supprimer "+arrR[0]['nbGen']+" items pour "+arrR[0]['nbUti']+" utilisateurs : "+oItem.lib+"... (ref="+idDico+"_"+oItem.num+")";				
				this.parentApplication.verifActi(arrR[0], action, actis, ROC, oItem.num, arrChange, idDico);				
			}
			
			
			protected function tester_clickHandler(event:MouseEvent):void
			{
				if(this.parentApplication.verifDico()){					
					var arrT:Array = new Array();
					var arrO:Array = new Array();
					
					arrT.push(Gms.text);
					arrO.push(GTms);
					arrT.push(Gfs.text);
					arrO.push(GTfs);
					arrT.push(Gmse.text);
					arrO.push(GTmse);
					arrT.push(Gfse.text);
					arrO.push(GTfse);
					arrT.push(Gmp.text);
					arrO.push(GTmp);
					arrT.push(Gfp.text);
					arrO.push(GTfp);
					arrT.push(Gmpe.text);
					arrO.push(GTmpe);						
					arrT.push(Gfpe.text);
					arrO.push(GTfpe);						
					
					this.parentApplication.testerGen(arrT,arrO);
				}
			}
			
			
			protected function edit_resultHandler(event:ResultEvent):void
			{
				bChange = false;
				arrChange = new Array;
				ROC.findByIdDico(idDico);
				T0.setStyle("color","black");
				T1.setStyle("color","black");
				T2.setStyle("color","black");
				T3.setStyle("color","black");
				T4.setStyle("color","black");
				T5.setStyle("color","black");
				T6.setStyle("color","black");
				T7.setStyle("color","black");
			}

			protected function t_changeHandler(event:TextOperationEvent):void
			{
				var tx:TextInput = event.target as TextInput;
				tx.setStyle("color","red");
				var id:String = tx.id.substr(1);
				var i:int = int(id);
				var change:Array = new Array;
				change["lib"] = tx.text;
				change["id_dtm"] = oItem['id'+i];
				arrChange.push(change);
				bChange = true;
			}

			protected function remove_resultHandler(event:ResultEvent):void
			{
				ROC.findByIdDico(idDico);				
			}
			
			protected function ajouter_clickHandler(event:MouseEvent):void
			{				
				var params:Array = new Array;
				params['id_dico']=idDico;
				var ordres:Array = new Array;
				ordres[0]=ms.text;
				ordres[1]=fs.text;
				ordres[2]=mse.text;
				ordres[3]=fse.text;
				ordres[4]=mp.text;
				ordres[5]=fp.text;
				ordres[6]=mpe.text;
				ordres[7]=fpe.text;
				params['ordres']=ordres;
				
				ROC.ajouter(params);
			}
			
			protected function ajouter_resultHandler(event:ResultEvent):void
			{
				Alert.show("L'item est ajouté.","Ajout d'un item");				
				
				vs.selectedChild = lecture;
				ROC.findByIdDico(idDico);
			}
						
			protected function ecriture_creationCompleteHandler(event:FlexEvent):void
			{
				//vérifie le nombre de déterminants
				if(dg.dataProvider.length == 49){
					Alert.show("Le nombre maximum de déterminant est atteint.\nVous ne pouvez pas en ajouter dans ce dictionnaire.", "Ajout déterminant");
					vs.selectedChild = lecture;
				}
			}
			
		]]>
	</fx:Script>
		
	<fx:Declarations>
		<s:RemoteObject id="ROC"
						 source="Model_DbTable_Gen_determinants" destination="zend" 
						 showBusyCursor="true"
						 fault="faultHandlerService(event)">
			<s:method name="editMulti" result="edit_resultHandler(event)" />
			<s:method name="findByIdDico" result="findByDico_resultHandler(event)" />
			<s:method name="utilise" result="utilise_resultHandler(event)" />
			<s:method name="removeNum" result="remove_resultHandler(event)" />			
			<s:method name="ajouter" result="ajouter_resultHandler(event)" />			

		</s:RemoteObject>
	</fx:Declarations>
	<mx:ViewStack id="vs" width="100%" height="100%">
		<mx:Canvas width="100%" height="100%" id="lecture" >		
	
			<s:VGroup width="100%" height="100%" id="detail" >
				<compo:hbFilterControl id="dgFilter"  />
				<s:VGroup width="100%" height="100%" >
					<s:HGroup width="100%" >
						<s:VGroup width="80">
							<s:HGroup>
								<mx:LinkButton visible="{bRemove}" width="20" click="removeItem()"
											   icon="@Embed('images/DeleteRecord.png')" toolTip="{'Supprimer un item'}"/>
								<mx:LinkButton id="btnAddNew" visible="{bAjout}" width="20" click="{vs.selectedChild = ecriture;}"
											   icon="@Embed('images/AddRecord.png')" toolTip="{'Ajouter un item'}"/>
							</s:HGroup>
							<s:Button label="Tester" click="tester_clickHandler(event)" />
							<s:Button label="Enregistrer" click="enregistrer_clickHandler(event)" visible="{bChange}" color="red" />
						</s:VGroup>
						<s:VGroup width="100%" height="100%">					
							<s:Label text="Mascu. sing." />
							<s:TextInput id="T0" width="100%" text="{oItem.ms}" change="t_changeHandler(event)" />
							<s:TextInput id="Gms" width="100%" text="{'['+oItem.num+'|m_mot]'}" />
							<s:TextInput id="GTms" width="100%" color="#117E20" text="---" />									
						</s:VGroup>
						<s:VGroup width="100%" height="100%">					
							<s:Label text="Fémi. sing." />
							<s:TextInput id="T1" width="100%" text="{oItem.fs}" change="t_changeHandler(event)" />
							<s:TextInput id="Gfs" width="100%" text="{'['+oItem.num+'|m_phrase]'}" />
							<s:TextInput id="GTfs" width="100%" color="#117E20" text="---" />									
						</s:VGroup>
						<s:VGroup width="100%" height="100%">					
							<s:Label text="Mascu. sing. éli." />
							<s:TextInput id="T2" width="100%" text="{oItem.mse}" change="t_changeHandler(event)" />
							<s:TextInput id="Gmse" width="100%" text="{'['+oItem.num+'|m_orateur]'}" />
							<s:TextInput id="GTmse" width="100%" color="#117E20" text="---" />									
						</s:VGroup>
						<s:VGroup width="100%" height="100%">					
							<s:Label text="Fémi. sing. éli." />
							<s:TextInput id="T3" width="100%" text="{oItem.fse}" change="t_changeHandler(event)" />
							<s:TextInput id="Gfse" width="100%" text="{'['+oItem.num+'|m_onde]'}" />
							<s:TextInput id="GTfse" width="100%" color="#117E20" text="---" />									
						</s:VGroup>
						<s:VGroup width="100%" height="100%">					
							<s:Label text="Mascu. plu." />
							<s:TextInput id="T4" width="100%" text="{oItem.mp}" change="t_changeHandler(event)" />
							<s:TextInput id="Gmp" width="100%" text="{'['+(int(oItem.num)+50)+'|m_mot]'}" />
							<s:TextInput id="GTmp" width="100%" color="#117E20" text="---" />									
						</s:VGroup>
						<s:VGroup width="100%" height="100%">					
							<s:Label text="Fémi. plu." />
							<s:TextInput id="T5" width="100%" text="{oItem.fp}" change="t_changeHandler(event)" />
							<s:TextInput id="Gfp" width="100%" text="{'['+(int(oItem.num)+50)+'|m_phrase]'}" />
							<s:TextInput id="GTfp" width="100%" color="#117E20" text="---" />									
						</s:VGroup>
						<s:VGroup width="100%" height="100%">					
							<s:Label text="Mascu. plu. éli." />
							<s:TextInput id="T6" width="100%" text="{oItem.mpe}" change="t_changeHandler(event)" />
							<s:TextInput id="Gmpe" width="100%" text="{'['+(int(oItem.num)+50)+'|m_orateur]'}" />
							<s:TextInput id="GTmpe" width="100%" color="#117E20" text="---" />									
						</s:VGroup>
						<s:VGroup width="100%" height="100%">					
							<s:Label text="Fémi. plu. éli." />
							<s:TextInput id="T7" width="100%" text="{oItem.fpe}" change="t_changeHandler(event)" />
							<s:TextInput id="Gfpe" width="100%" text="{'['+(int(oItem.num)+50)+'|m_onde]'}" />
							<s:TextInput id="GTfpe" width="100%" color="#117E20" text="---" />									
						</s:VGroup>
					</s:HGroup>
					<mx:DataGrid id="dg" width="100%" height="100%" click="selectDgItem(event);" editable="false" >
						<mx:columns>
							<mx:DataGridColumn dataField="num" editable="false" headerText="N°" width="80" />
							<mx:DataGridColumn dataField="ms"  headerText="Mascu. sing." />
							<mx:DataGridColumn dataField="fs"  headerText="Fémi. sing." />
							<mx:DataGridColumn dataField="mse" headerText="Mascu. sing. éli." />
							<mx:DataGridColumn dataField="fse" headerText="Fémi. sing. éli." />
							<mx:DataGridColumn dataField="mp"  headerText="Mascu. plu." />
							<mx:DataGridColumn dataField="fp"  headerText="Fémi. plu." />
							<mx:DataGridColumn dataField="mpe" headerText="Mascu. plu. éli." />
							<mx:DataGridColumn dataField="fpe" headerText="Fémi. plu. éli." />
						</mx:columns>
					</mx:DataGrid>
				</s:VGroup>
			</s:VGroup>
			
		</mx:Canvas>
		<mx:Canvas width="100%" height="100%" id="ecriture" >
			<s:VGroup width="100%" height="100%" creationComplete="ecriture_creationCompleteHandler(event)" >
				<s:VGroup >					
					<s:HGroup verticalAlign="middle">
						<s:VGroup >					
							<s:Label text="Mascu. sing." />
							<s:TextInput id="ms" text=""  />
						</s:VGroup>
						<s:VGroup >					
							<s:Label text="Fémi. sing." />
							<s:TextInput id="fs" text="" />
						</s:VGroup>
						<s:VGroup >					
							<s:Label text="Mascu. sing. éli." />
							<s:TextInput id="mse" text="" />
						</s:VGroup>
						<s:VGroup >					
							<s:Label text="Fémi. sing. éli." />
							<s:TextInput id="fse" text="" />
						</s:VGroup>
					</s:HGroup>
					<s:HGroup verticalAlign="middle">
						<s:VGroup >					
							<s:Label text="Mascu. plu." />
							<s:TextInput id="mp" text="" />
						</s:VGroup>
						<s:VGroup >					
							<s:Label text="Fémi. plu." />
							<s:TextInput id="fp" text="" />
						</s:VGroup>
						<s:VGroup >					
							<s:Label text="Mascu. plu. éli." />
							<s:TextInput id="mpe" text="" />
						</s:VGroup>
						<s:VGroup >					
							<s:Label text="Fémi. plu. éli." />
							<s:TextInput id="fpe" text="" />
						</s:VGroup>
					</s:HGroup>
				</s:VGroup>
				<s:HGroup>
					<s:Button label="Ajouter" click="ajouter_clickHandler(event)"  />
					<s:Button label="Annuler" click="{vs.selectedChild = lecture;}"  />
				</s:HGroup>
			</s:VGroup>				
		</mx:Canvas>
	</mx:ViewStack>			
			
</s:Group>
